// <auto-generated />
using System;
using MedialCare.Models.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MedialCare.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210225024504_DBv1")]
    partial class DBv1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("MedialCare.Models.Data.Entities.FeedBack", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Admin");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Admin");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("1");

                    b.HasKey("ID");

                    b.ToTable("FeedBacks");
                });

            modelBuilder.Entity("MedialCare.Models.Data.Entities.RequestPolicy", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Admin");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("PolicyID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Admin");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("1");

                    b.HasKey("ID");

                    b.ToTable("RequestPolicies");
                });

            modelBuilder.Entity("MedialCare.Models.Entities.Company", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Admin");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Image")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("041.jpg");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Admin");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("1");

                    b.HasKey("ID");

                    b.ToTable("Companys");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "Tu Liem, Ha Noi, Viet Name",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Image = "pexels-jonathan-meyer-668300.jpg",
                            Name = "SIMAX",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "www.simax.com"
                        },
                        new
                        {
                            ID = 2,
                            Address = "Dong Anh, Ha Noi, Viet Name",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Image = "pexels-photo-5327865.jpeg",
                            Name = "MAXOSI",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "www.maxosi.com"
                        },
                        new
                        {
                            ID = 3,
                            Address = "California, UK",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Image = "pexels-tom-fisk-1692693.jpg",
                            Name = "Facebook",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "www.facebook.com"
                        });
                });

            modelBuilder.Entity("MedialCare.Models.Entities.Policy", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Admin");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Emi")
                        .HasColumnType("money");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Admin");

                    b.Property<string>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("1");

                    b.HasKey("ID");

                    b.HasIndex("CompanyId");

                    b.ToTable("Policys");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Amount = 678m,
                            CompanyId = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "Chinh sach nay danh cho nhung nhan vien moi vao cong ty, duoc ho tro tu phia cong ty len den 50%. Thoi han dang ky ke tu ngay hom nay",
                            Emi = 67m,
                            Name = "Chinh sach cho nhan vien moi vao cong ty",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            Amount = 498m,
                            CompanyId = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "Nhung nhan vien lam tu 10 nam tro len trong cong ty thi se duoc cong ty chi tra tien bao hiem toan phan. Gio han trong vong 20 nam",
                            Emi = 12m,
                            Name = "Nhan vien lam viec tu 10 nam tro len trong cong ty",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            Amount = 498m,
                            CompanyId = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "Bao hiem xa hoi la mot nghi vu va trach nhieu cua moi nguoi dan, Neu ban thuc hien bao hiem xa hoi trong vong 20 nam thi ban se nhan duoc mot goi troi cap sau khi ket thuc.",
                            Emi = 12m,
                            Name = "Bao hiem xa hoi",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 4,
                            Amount = 498m,
                            CompanyId = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "Chinh sach yeu tien chon nguoi trung tien mac cac benh ve suong khop. Khach hang co the huong duoc cac goi tri lieu hoan toan mien phi trong suoc thoi gian su dung dich vu cua chung toi",
                            Emi = 12m,
                            Name = "Yeu tien cho nguoi trung tien",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MedialCare.Models.Entities.PolicyOnEmployee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Admin");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("Date");

                    b.Property<int>("PolicyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Admin");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("1");

                    b.HasKey("ID");

                    b.HasIndex("PolicyId");

                    b.HasIndex("UserId");

                    b.ToTable("PolicyOnEmployees");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            EndDate = new DateTime(2022, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PolicyId = 1,
                            StartDate = new DateTime(2021, 2, 25, 9, 45, 3, 404, DateTimeKind.Local).AddTicks(7049),
                            Status = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 7
                        },
                        new
                        {
                            ID = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            EndDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PolicyId = 1,
                            StartDate = new DateTime(2021, 2, 25, 9, 45, 3, 405, DateTimeKind.Local).AddTicks(5726),
                            Status = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 8
                        },
                        new
                        {
                            ID = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            EndDate = new DateTime(2021, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PolicyId = 1,
                            StartDate = new DateTime(2021, 2, 25, 9, 45, 3, 405, DateTimeKind.Local).AddTicks(5772),
                            Status = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("MedialCare.Models.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Admin");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("Date");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Admin");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("1");

                    b.HasKey("ID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "Thuy Bieu, Hue",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Designation = "Emplopyee",
                            Email = "truongthanhtu.it.1998@gmail.com",
                            FirstName = "Thanh Tu",
                            Gender = 0,
                            Image = "133690010_890302931723740_4897017713202137858_o.jpg",
                            JoinDate = new DateTime(1998, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Truong",
                            Level = 1,
                            Password = "123456",
                            Phone = "0359077335",
                            Salary = 230m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "Thanhtu"
                        },
                        new
                        {
                            ID = 2,
                            Address = "Dien Ban, Quang nam",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Designation = "Emplopyee",
                            Email = "nguyenvana@gmail.com",
                            FirstName = " Van A",
                            Gender = 0,
                            Image = "",
                            JoinDate = new DateTime(1998, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Tran",
                            Level = 2,
                            Password = "123456",
                            Phone = "0367376544",
                            Salary = 254m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "nguyenvana"
                        },
                        new
                        {
                            ID = 3,
                            Address = "Linh Dam, Ha Noi",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Designation = "Developer",
                            Email = "vuquanghuy@gmail.com",
                            FirstName = "Quang Huy",
                            Gender = 0,
                            Image = "120276334_1294841180852265_978321052909351337_o.jpg",
                            JoinDate = new DateTime(2001, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Vu",
                            Level = 1,
                            Password = "123456",
                            Phone = "98372837362",
                            Salary = 265m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "vuquanghuy"
                        },
                        new
                        {
                            ID = 4,
                            Address = "My Dinh, Ha Noi",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Designation = "Developer",
                            Email = "phamtuan@gmail.com",
                            FirstName = "Tuan",
                            Gender = 0,
                            Image = "120812760_1010459009465475_90927199314198547_o.jpg",
                            JoinDate = new DateTime(2001, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Pham",
                            Level = 1,
                            Password = "123456",
                            Phone = "98372837362",
                            Salary = 265m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "phamtuan"
                        },
                        new
                        {
                            ID = 5,
                            Address = "So Tay, Ha Noi",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Designation = "Tester",
                            Email = "dothichanhoa@gmail.com",
                            FirstName = "Thi Chan Hoa",
                            Gender = 1,
                            Image = "46224173_533702767097372_931079331302604800_n.jpg",
                            JoinDate = new DateTime(2000, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Do",
                            Level = 1,
                            Password = "123456",
                            Phone = "98372837362",
                            Salary = 265m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "chanhoa"
                        },
                        new
                        {
                            ID = 6,
                            Address = "Xuan Loc, Nghe An",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Designation = "Developer",
                            Email = "nguyendinhhieu@gmail.com",
                            FirstName = "Dinh Hieu",
                            Gender = 0,
                            Image = "133650886_3739659902806749_1154799049283951510_o.jpg",
                            JoinDate = new DateTime(1996, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Nguyen ",
                            Level = 1,
                            Password = "123456",
                            Phone = "98372837362",
                            Salary = 265m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "nguyendinhhieu"
                        },
                        new
                        {
                            ID = 7,
                            Address = "Long Thanh, Vinh Long",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Designation = "Employee",
                            Email = "chaubui@gmail.com",
                            FirstName = "Chau",
                            Gender = 1,
                            JoinDate = new DateTime(2002, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Bui ",
                            Level = 2,
                            Password = "123456",
                            Phone = "98372837362",
                            Salary = 265m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "chubui"
                        },
                        new
                        {
                            ID = 8,
                            Address = "Thuy Bieu, Hue",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Designation = "Employee",
                            Email = "caobaolong@gmail.com",
                            FirstName = "Ba Long",
                            Gender = 1,
                            JoinDate = new DateTime(2002, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Cao",
                            Level = 2,
                            Password = "123456",
                            Phone = "98372837362",
                            Salary = 265m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "caobaolong"
                        });
                });

            modelBuilder.Entity("MedialCare.Models.Entities.Policy", b =>
                {
                    b.HasOne("MedialCare.Models.Entities.Company", "Company")
                        .WithMany("Policys")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("MedialCare.Models.Entities.PolicyOnEmployee", b =>
                {
                    b.HasOne("MedialCare.Models.Entities.Policy", "Policy")
                        .WithMany("PolicyOnEmployee")
                        .HasForeignKey("PolicyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedialCare.Models.Entities.User", "User")
                        .WithMany("PolicyOnEmployees")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Policy");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MedialCare.Models.Entities.Company", b =>
                {
                    b.Navigation("Policys");
                });

            modelBuilder.Entity("MedialCare.Models.Entities.Policy", b =>
                {
                    b.Navigation("PolicyOnEmployee");
                });

            modelBuilder.Entity("MedialCare.Models.Entities.User", b =>
                {
                    b.Navigation("PolicyOnEmployees");
                });
#pragma warning restore 612, 618
        }
    }
}
